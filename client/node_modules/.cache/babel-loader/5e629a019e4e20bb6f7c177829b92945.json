{"ast":null,"code":"// Copyright 2012 Mark Cavage, Inc.  All rights reserved.\n'use strict';\n\nvar assert = require('assert-plus'); ///--- API\n\n/**\n * This basically exists for `curl`. `curl` on `HEAD` requests usually\n * just sits there and hangs, unless you explicitly set\n * Connection:close. And in general, you probably want to set\n * Connection: close to curl anyway.\n *\n * Also, because curl spits out an annoying message to stderr about\n * remaining bytes if content-length is set, this plugin also drops\n * the `content-length` header (some user agents handle it and want it,\n * curl does not).\n *\n * To be slightly more generic, the options block takes a user\n * agent regexp, however.\n *\n * @public\n * @function userAgentConnection\n * @param    {Object} [options] - an options object\n * @param    {RegExp} [options.userAgentRegExp=/^curl.+/] - matching any\n *                                                        user-agents applicable\n * @returns  {Function} Handler\n */\n\n\nfunction userAgentConnection(options) {\n  var opts = options || {};\n  assert.optionalObject(opts, 'options');\n  assert.optionalObject(opts.userAgentRegExp, 'options.userAgentRegExp');\n  var re = opts.userAgentRegExp;\n\n  if (!re) {\n    re = /^curl.+/;\n  }\n\n  function handleUserAgent(req, res, next) {\n    var ua = req.headers['user-agent'];\n\n    if (ua && re.test(ua)) {\n      res.setHeader('Connection', 'close');\n\n      if (req.method === 'HEAD') {\n        res.once('header', res.removeHeader.bind(res, 'content-length'));\n      }\n    }\n\n    next();\n  }\n\n  return handleUserAgent;\n}\n\nmodule.exports = userAgentConnection;","map":null,"metadata":{},"sourceType":"script"}