{"ast":null,"code":"// Copyright 2012 Mark Cavage, Inc.  All rights reserved.\n///--- Globals\n'use strict';\n\nvar ID = 0;\nvar MAX_INT = Math.pow(2, 32) - 1;\nvar PROBES = {\n  // server_name, route_name, id, method, url, headers (json)\n  'route-start': ['char *', 'char *', 'int', 'char *', 'char *', 'json'],\n  // server_name, route_name, handler_name, id\n  'handler-start': ['char *', 'char *', 'char *', 'int'],\n  // server_name, route_name, handler_name, id\n  'handler-done': ['char *', 'char *', 'char *', 'int'],\n  // server_name, route_name, id, statusCode, headers (json)\n  'route-done': ['char *', 'char *', 'int', 'int', 'json'],\n  // Client probes\n  // method, url, headers, id\n  'client-request': ['char *', 'char *', 'json', 'int'],\n  // id, statusCode, headers\n  'client-response': ['int', 'int', 'json'],\n  // id, Error.toString()\n  'client-error': ['id', 'char *']\n};\nvar PROVIDER; ///--- API\n// eslint-disable-next-line wrap-iife\n\nmodule.exports = function exportStaticProvider() {\n  if (!PROVIDER) {\n    try {\n      var dtrace = require('dtrace-provider');\n\n      PROVIDER = dtrace.createDTraceProvider('restify');\n    } catch (e) {\n      PROVIDER = {\n        fire: function fire() {},\n        enable: function enable() {},\n        addProbe: function addProbe() {\n          var p = {\n            fire: function fire() {}\n          };\n          return p;\n        },\n        removeProbe: function removeProbe() {},\n        disable: function disable() {}\n      };\n    }\n\n    PROVIDER._rstfy_probes = {};\n    Object.keys(PROBES).forEach(function forEach(p) {\n      var args = PROBES[p].splice(0);\n      args.unshift(p);\n      var probe = PROVIDER.addProbe.apply(PROVIDER, args);\n      PROVIDER._rstfy_probes[p] = probe;\n    });\n    PROVIDER.enable();\n\n    PROVIDER.nextId = function nextId() {\n      if (++ID >= MAX_INT) {\n        ID = 1;\n      }\n\n      return ID;\n    };\n  }\n\n  return PROVIDER;\n}();","map":null,"metadata":{},"sourceType":"script"}