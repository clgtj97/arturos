{"ast":null,"code":"// Copyright 2012 Mark Cavage, Inc.  All rights reserved.\n'use strict'; ///--- Exports\n\n/**\n * JSONP formatter. like JSON, but with a callback invocation.\n * Unicode escapes line and paragraph separators.\n *\n * @public\n * @function formatJSONP\n * @param    {Object} req - the request object\n * @param    {Object} res - the response object\n * @param    {Object} body - response body\n * @returns  {String} data\n */\n\nfunction formatJSONP(req, res, body) {\n  if (!body) {\n    res.setHeader('Content-Length', 0);\n    return null;\n  }\n\n  if (Buffer.isBuffer(body)) {\n    body = body.toString('base64');\n  }\n\n  var _cb = req.query.callback || req.query.jsonp;\n\n  var data;\n\n  if (_cb) {\n    data = 'typeof ' + _cb + \" === 'function' && \" + _cb + '(' + JSON.stringify(body) + ');';\n  } else {\n    data = JSON.stringify(body);\n  }\n\n  data = data.replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\");\n  res.setHeader('Content-Length', Buffer.byteLength(data));\n  return data;\n}\n\nmodule.exports = formatJSONP;","map":null,"metadata":{},"sourceType":"script"}