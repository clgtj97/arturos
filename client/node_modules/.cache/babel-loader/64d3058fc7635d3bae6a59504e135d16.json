{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar net = require('net');\n\nfunction Socket(parent, options) {\n  net.Socket.call(this, options);\n  var state = {};\n  this._spdyState = state;\n  state.parent = parent;\n  this.servername = parent.servername;\n  this.npnProtocol = parent.npnProtocol;\n  this.alpnProtocol = parent.alpnProtocol;\n  this.authorized = parent.authorized;\n  this.authorizationError = parent.authorizationError;\n  this.encrypted = true;\n  this.allowHalfOpen = true;\n}\n\nutil.inherits(Socket, net.Socket);\nmodule.exports = Socket;\nvar methods = ['renegotiate', 'setMaxSendFragment', 'getTLSTicket', 'setServername', 'setSession', 'getPeerCertificate', 'getSession', 'isSessionReused', 'getCipher', 'getEphemeralKeyInfo'];\nmethods.forEach(function (method) {\n  Socket.prototype[method] = function methodWrap() {\n    var parent = this._spdyState.parent;\n    return parent[method].apply(parent, arguments);\n  };\n});","map":null,"metadata":{},"sourceType":"script"}