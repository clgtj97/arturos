{"ast":null,"code":"// Copyright 2012 Mark Cavage, Inc.  All rights reserved.\n'use strict';\n\nvar crypto = require('crypto');\n\nvar httpDate = require('./utils/httpDate');\n\nvar hrTimeDurationInMs = require('./utils/hrTimeDurationInMs'); ///--- API\n\n\nfunction setHeaders(req, res) {\n  var hash;\n  var now = new Date();\n\n  if (!res.getHeader('Connection')) {\n    res.setHeader('Connection', req.isKeepAlive() ? 'Keep-Alive' : 'close');\n  }\n\n  if (res._data && !res.getHeader('Content-MD5')) {\n    hash = crypto.createHash('md5');\n    hash.update(res._data);\n    res.setHeader('Content-MD5', hash.digest('base64'));\n  }\n\n  if (!res.getHeader('Date')) {\n    res.setHeader('Date', httpDate(now));\n  }\n\n  if (res.etag && !res.getHeader('Etag')) {\n    res.setHeader('Etag', res.etag);\n  }\n\n  if (!res.getHeader('Server')) {\n    res.setHeader('Server', res.serverName);\n  }\n\n  if (res.version && !res.getHeader('Api-Version')) {\n    res.setHeader('Api-Version', res.version);\n  }\n\n  if (!res.getHeader('Request-Id')) {\n    res.setHeader('Request-Id', req.getId());\n  }\n\n  if (!res.getHeader('Response-Time')) {\n    // we cannot use req._timeFlushed here as\n    // the response is not flushed yet\n    res.setHeader('Response-Time', hrTimeDurationInMs(req._timeStart, process.hrtime()));\n  }\n}\n/**\n * handles disappeared CORS headers.\n * https://github.com/restify/node-restify/issues/284\n *\n * @public\n * @function fullResponse\n * @returns  {Function} Handler\n */\n\n\nfunction fullResponse() {\n  function restifyResponseHeaders(req, res, next) {\n    res.once('header', function onceHeader() {\n      // Restify 1.0 compatibility\n      if (res.defaultResponseFormatters) {\n        res.defaultResponseFormatters(res._data);\n      }\n\n      res.emit('beforeSend', res._data, res._body); // end backwards-compatibility\n\n      return setHeaders(req, res);\n    });\n    return next();\n  }\n\n  return restifyResponseHeaders;\n} ///--- Exports\n\n\nmodule.exports = fullResponse;","map":null,"metadata":{},"sourceType":"script"}