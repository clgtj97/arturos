{"ast":null,"code":"'use strict';\n/* eslint-disable func-names */\n\nvar Chain = require('../chain');\n\nvar _ = require('lodash');\n\nmodule.exports = composeHandlerChain;\n/**\n * Builds a function with the signature of a handler\n * function(req,resp,callback).\n * which internally executes the passed in array of handler function as a chain.\n *\n * @param {Array} [handlers] - handlers Array of\n * function(req,resp,callback) handlers.\n * @param {Object} [options] - options Optional option object that is\n * passed to Chain.\n * @returns {Function} Handler function that executes the handler chain when run\n */\n\nfunction composeHandlerChain(handlers, options) {\n  var chain = new Chain(options);\n\n  if (_.isArray(handlers)) {\n    handlers = _.flattenDeep(handlers);\n    handlers.forEach(function (handler) {\n      chain.add(handler);\n    });\n  } else {\n    chain.add(handlers);\n  }\n\n  return function handlerChain(req, resp, callback) {\n    chain.run(req, resp, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}