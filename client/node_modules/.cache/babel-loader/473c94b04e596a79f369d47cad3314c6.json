{"ast":null,"code":"var fs = require('fs');\n\nvar ncp = require('ncp').ncp;\n\nvar path = require('path');\n\nvar rimraf = require('rimraf');\n\nvar mkdirp = require('mkdirp');\n\nmodule.exports = mv;\n\nfunction mv(source, dest, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  var shouldMkdirp = !!options.mkdirp;\n  var clobber = options.clobber !== false;\n  var limit = options.limit || 16;\n\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n\n  function mkdirs() {\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return cb(err);\n      doRename();\n    });\n  }\n\n  function doRename() {\n    if (clobber) {\n      fs.rename(source, dest, function (err) {\n        if (!err) return cb();\n        if (err.code !== 'EXDEV') return cb(err);\n        moveFileAcrossDevice(source, dest, clobber, limit, cb);\n      });\n    } else {\n      fs.link(source, dest, function (err) {\n        if (err) {\n          if (err.code === 'EXDEV') {\n            moveFileAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n\n          if (err.code === 'EISDIR' || err.code === 'EPERM') {\n            moveDirAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n\n          cb(err);\n          return;\n        }\n\n        fs.unlink(source, cb);\n      });\n    }\n  }\n}\n\nfunction moveFileAcrossDevice(source, dest, clobber, limit, cb) {\n  var outFlags = clobber ? 'w' : 'wx';\n  var ins = fs.createReadStream(source);\n  var outs = fs.createWriteStream(dest, {\n    flags: outFlags\n  });\n  ins.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n\n    if (err.code === 'EISDIR' || err.code === 'EPERM') {\n      moveDirAcrossDevice(source, dest, clobber, limit, cb);\n    } else {\n      cb(err);\n    }\n  });\n  outs.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    cb(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n\n  function onClose() {\n    fs.unlink(source, cb);\n  }\n}\n\nfunction moveDirAcrossDevice(source, dest, clobber, limit, cb) {\n  var options = {\n    stopOnErr: true,\n    clobber: false,\n    limit: limit\n  };\n\n  if (clobber) {\n    rimraf(dest, {\n      disableGlob: true\n    }, function (err) {\n      if (err) return cb(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n\n  function startNcp() {\n    ncp(source, dest, options, function (errList) {\n      if (errList) return cb(errList[0]);\n      rimraf(source, {\n        disableGlob: true\n      }, cb);\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"script"}