{"ast":null,"code":"// Copyright 2018 Restify. All rights reserved.\n'use strict';\n\nvar assert = require('assert-plus'); ///--- API\n\n/**\n * This plugin creates `req.set(key, val)` and `req.get(key)` methods for\n * setting and retrieving request specific data.\n *\n * @public\n * @function context\n * @returns {Function} Handler\n * @example\n * server.pre(restify.plugins.pre.context());\n * server.get('/', [\n *     function(req, res, next) {\n *         req.set(myMessage, 'hello world');\n *         return next();\n *     },\n *     function two(req, res, next) {\n *         res.send(req.get(myMessage)); // => sends 'hello world'\n *         return next();\n *     }\n * ]);\n */\n\n\nfunction ctx() {\n  return function context(req, res, next) {\n    var data = {};\n    /**\n     * Set context value by key\n     * Requires the context plugin.\n     *\n     * @public\n     * @memberof Request\n     * @instance\n     * @function req.set\n     * @param    {String} key - key\n     * @param    {*} value - value\n     * @returns  {undefined} no return value\n     */\n\n    req.set = function set(key, value) {\n      assert.string(key, 'key must be string');\n\n      if (key === '') {\n        assert.fail('key must not be empty string');\n      }\n\n      data[key] = value;\n    };\n    /**\n     * Get context value by key.\n     * Requires the context plugin.\n     *\n     * @public\n     * @memberof Request\n     * @instance\n     * @function req.get\n     * @param    {String} key - key\n     * @returns  {*} value stored in context\n     */\n\n\n    req.get = function get(key) {\n      assert.string(key, 'key must be string');\n\n      if (key === '') {\n        assert.fail('key must not be empty string');\n      }\n\n      return data[key];\n    };\n    /**\n     * Get all context\n     * Requires the context plugin.\n     *\n     * @public\n     * @memberof Request\n     * @instance\n     * @function req.getAll\n     * @returns  {*} value stored in context\n     */\n\n\n    req.getAll = function getAll() {\n      return data;\n    };\n\n    return next();\n  };\n} ///--- Exports\n\n\nmodule.exports = ctx;","map":null,"metadata":{},"sourceType":"script"}