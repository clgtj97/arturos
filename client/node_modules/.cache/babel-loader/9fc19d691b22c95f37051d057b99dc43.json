{"ast":null,"code":"// Copyright 2012 Mark Cavage, Inc.  All rights reserved.\n'use strict';\n\nvar assert = require('assert-plus');\n\nvar errors = require('restify-errors');\n\nvar bodyReader = require('./bodyReader');\n\nvar regex = require('./utils/regex'); ///--- API\n\n/**\n * Parses json body from the request.\n *\n * @public\n * @function jsonBodyParser\n * @param    {Object}               options - an options object\n * @throws   {InvalidContentError}            on bad input\n * @returns  {Function} Handler\n */\n\n\nfunction jsonBodyParser(options) {\n  assert.optionalObject(options, 'options');\n  var opts = options || {};\n  var override = opts.overrideParams;\n\n  function parseJson(req, res, next) {\n    // save original body on req.rawBody and req._body\n    req.rawBody = req._body = req.body;\n    var contentType = req.getContentType(); // check for empty body first, don't pay regex tax unless necessary.\n    // for content type, check for exact match and any of the *+json types\n\n    if (!req.body || contentType !== 'application/json' && !regex.jsonContentType.test(contentType)) {\n      return next();\n    }\n\n    var params;\n\n    try {\n      params = JSON.parse(req.body, opts.reviver);\n    } catch (e) {\n      return next(new errors.InvalidContentError('%s', 'Invalid JSON: ' + e.message));\n    }\n\n    if (opts.mapParams === true) {\n      if (Array.isArray(params)) {\n        // if req.params exists, we have url params. we can't map an\n        // array safely onto req.params, throw an error.\n        if (req.params && Object.keys(req.params).length > 0 && !(req.params instanceof Array)) {\n          return next(new errors.InternalServerError('Cannot map POST body of [Array array] onto ' + 'req.params'));\n        }\n\n        req.params = params;\n      } else if (typeof params === 'object' && params !== null) {\n        // else, try to merge the objects\n        Object.keys(params).forEach(function forEach(k) {\n          var p = req.params[k];\n\n          if (p && !override) {\n            return;\n          }\n\n          req.params[k] = params[k];\n        });\n      } else {\n        // otherwise, do a wholesale stomp, no need to merge one by one.\n        req.params = params || req.params;\n      }\n    }\n\n    req.body = params;\n    return next();\n  }\n\n  var chain = [];\n\n  if (!opts.bodyReader) {\n    chain.push(bodyReader(opts));\n  }\n\n  chain.push(parseJson);\n  return chain;\n}\n\nmodule.exports = jsonBodyParser;","map":null,"metadata":{},"sourceType":"script"}